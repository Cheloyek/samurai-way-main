{"version":3,"file":"static/js/58.38baf2bf.chunk.js","mappings":"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","sources":["redux/chat-selectors.ts","webpack://samurai-way/./src/pages/chat/Chat.module.css?04e1","redux/auth-selectors.ts","pages/chat/Chat.tsx"],"sourcesContent":["import {AppStateType} from \"./redux-store\";\r\n\r\nexport const chatStatus = (state: AppStateType) => {\r\n    return state.chat.status\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Chat_message__fu8nE\",\"imageAndText\":\"Chat_imageAndText__xRypC\",\"text\":\"Chat_text__IAAfG\",\"name\":\"Chat_name__pNIyv\",\"messageText\":\"Chat_messageText__czpAQ\",\"time\":\"Chat_time__My98W\",\"friendMessage\":\"Chat_friendMessage__9rIc8\",\"friendImageAndText\":\"Chat_friendImageAndText__z5JCx\",\"friendText\":\"Chat_friendText__rEvOO\",\"friendName\":\"Chat_friendName__uIAKa\",\"friendMessageText\":\"Chat_friendMessageText__En-33\"};","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const authId = (state: AppStateType) => {\r\n    return state.auth.userId\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {ChatMessageAPIType, ws} from \"../../api/chat-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessage, startMessagesListening, stopMessagesListening} from \"../../redux/chat-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {chatStatus} from \"../../redux/chat-selectors\";\r\nimport {Button, Input, Space} from \"antd\";\r\nimport s from './Chat.module.css'\r\nimport {v1} from \"uuid\";\r\nimport {authId} from \"../../redux/auth-selectors\";\r\nimport background from './background.png'\r\n\r\nexport const Chat = () => {\r\n\r\n    const status = useSelector(chatStatus)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [ws])\r\n\r\n    return <div style={{width: '100%', height: '100%', backgroundColor: '#fffdfd'}}>\r\n        {status === 'error' && <div>Error</div>}\r\n        <>\r\n            <Messages/>\r\n            <AddChatMessageForm/>\r\n        </>\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC = () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [isAutoScroll, setIsAutoScroll] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            setTimeout(() => {\r\n                messagesAnchorRef.current?.scrollIntoView({block: 'end', behavior: 'smooth'})\r\n            }, 500)\r\n\r\n        }\r\n    }, [messages])\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 135) {\r\n            !isAutoScroll && setIsAutoScroll(true)\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false)\r\n        }\r\n    }\r\n\r\n    return <div style={{maxHeight: '80vh', overflowY: 'auto', backgroundImage: `url(${background})`, marginLeft: 'auto', marginRight: 'auto', maxWidth: '1200px'}} onScroll={scrollHandler}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m}/>)}\r\n        <div ref={messagesAnchorRef}></div>\r\n    </div>\r\n}\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = ({message}) => {\r\n    const authUserId = useSelector(authId)\r\n\r\n    return (\r\n        message.userId === authUserId\r\n            ? <div id={v1() + message.userId} className={s.message}>\r\n                <div className={s.imageAndText}>\r\n                    <img className={s.img} src={message.photo}/>\r\n                    <div className={s.text}>\r\n                        <div>\r\n                            <div className={s.name}>{message.userName}</div>\r\n                            <pre className={s.messageText}>{message.message}</pre>\r\n                        </div>\r\n                        <div className={s.time}>09:00</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : <div className={s.friendMessage}>\r\n                <div className={s.friendImageAndText}>\r\n                    <img src={message.photo}/>\r\n                    <div className={s.friendText}>\r\n                        <div>\r\n                            <div className={s.friendName}>{message.userName}</div>\r\n                            <pre className={s.friendMessageText}>{message.message}</pre>\r\n                        </div>\r\n                        <div className={s.time}>09:01</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst AddChatMessageForm: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector(chatStatus)\r\n    // const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n    return <div>\r\n        <div style={{marginLeft: 'auto', marginRight: 'auto'}}>\r\n            <Space.Compact style={{paddingTop: '25px', paddingLeft: '10%', minWidth: '100%'}}>\r\n                <Button type=\"primary\" disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</Button>\r\n                <Input placeholder=\"Write a message\" bordered={false} maxLength={100} showCount\r\n                       onChange={(e) => (setMessage(e.currentTarget.value))} value={message} style={{maxWidth: '70%'}}/>\r\n            </Space.Compact>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Chat"],"names":["chatStatus","state","chat","status","authId","auth","userId","Chat","useSelector","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","ws","style","width","height","backgroundColor","Messages","AddChatMessageForm","messages","messagesAnchorRef","useRef","useState","isAutoScroll","setIsAutoScroll","setTimeout","current","scrollIntoView","block","behavior","maxHeight","overflowY","backgroundImage","background","marginLeft","marginRight","maxWidth","onScroll","e","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","index","Message","message","id","ref","authUserId","v1","className","s","src","photo","userName","setMessage","paddingTop","paddingLeft","minWidth","type","disabled","onClick","sendMessage","placeholder","bordered","maxLength","showCount","onChange","value"],"sourceRoot":""}